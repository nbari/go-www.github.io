<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>www</title>
    <link>https://go-www.com/</link>
    <description>Recent content on www</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> </copyright>
    <lastBuildDate>Tue, 12 Sep 2017 10:17:49 +0200</lastBuildDate>
    
	<atom:link href="https://go-www.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Letsencrypt</title>
      <link>https://go-www.com/post/letsencrypt/</link>
      <pubDate>Tue, 12 Sep 2017 10:17:49 +0200</pubDate>
      
      <guid>https://go-www.com/post/letsencrypt/</guid>
      <description>Let&amp;rsquo;s Encrypt - Free SSL/TLS Certificates Just type:
www -s your-domain.tld  That&amp;rsquo;s all
Requirements You will need a valid domain/subdomain pointing to a valid public IP, also port 443 needs to be open.</description>
    </item>
    
    <item>
      <title>How It Works</title>
      <link>https://go-www.com/post/how-it-works/</link>
      <pubDate>Mon, 11 Sep 2017 21:36:00 +0200</pubDate>
      
      <guid>https://go-www.com/post/how-it-works/</guid>
      <description>By typing www will start a web server on port 8000 by default and use as document root the directory where the command was call
$ www  A different document root may be specified by using the -r option, for example:
$ www -r /tmp  By default www listen on port 8000, this can be changed by using the -p option:
$ www -p 80   may need root privileges</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://go-www.com/about/</link>
      <pubDate>Sun, 10 Sep 2017 13:09:04 +0200</pubDate>
      
      <guid>https://go-www.com/about/</guid>
      <description> What it is www? A web server that serves only static content, it can send traffic in plain HTTP, or HTTPS by using a self signed certificate localhost or using a valid certificate by using letsencrypt.
Why ? Because of the need to share, test via HTTP/HTTPS the contents of a directory.
The idea came from the need to simplify this commands:
python -m SimpleHTTPServer  or
twistd -n web --path /foo/bar/baz  </description>
    </item>
    
  </channel>
</rss>