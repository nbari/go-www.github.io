<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on www</title>
    <link>https://go-www.com/tags/code/</link>
    <description>Recent content in Code on www</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> </copyright>
    <lastBuildDate>Mon, 11 Sep 2017 20:35:00 +0200</lastBuildDate>
    
	<atom:link href="https://go-www.com/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The code</title>
      <link>https://go-www.com/post/the-code/</link>
      <pubDate>Mon, 11 Sep 2017 20:35:00 +0200</pubDate>
      
      <guid>https://go-www.com/post/the-code/</guid>
      <description>The full code is close to 100 lines using packages from the standard library and the acme/autocert
package main import ( &amp;quot;bytes&amp;quot; &amp;quot;crypto/rand&amp;quot; &amp;quot;crypto/rsa&amp;quot; &amp;quot;crypto/tls&amp;quot; &amp;quot;crypto/x509&amp;quot; &amp;quot;crypto/x509/pkix&amp;quot; &amp;quot;encoding/pem&amp;quot; &amp;quot;flag&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;log&amp;quot; &amp;quot;math/big&amp;quot; &amp;quot;net/http&amp;quot; &amp;quot;time&amp;quot; &amp;quot;golang.org/x/crypto/acme/autocert&amp;quot; ) type responseWriter struct { http.ResponseWriter statusCode int } func (w *responseWriter) WriteHeader(statusCode int) { w.statusCode = statusCode w.ResponseWriter.WriteHeader(statusCode) } func www(root string, quiet bool) http.Handler { return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) { start := time.</description>
    </item>
    
  </channel>
</rss>